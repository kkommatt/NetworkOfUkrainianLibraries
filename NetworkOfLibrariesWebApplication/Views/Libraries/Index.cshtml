@model IEnumerable<NetworkOfLibrariesWebApplication.Library>
@using Microsoft.AspNetCore.Identity;
@using NetworkOfLibrariesWebApplication.Infrastructure.Identity;
@using NetworkOfLibrariesWebApplication.Infrastructure.Identity.Extensions;
@{
    ViewData["Title"] = "Бібліотеки України";
}

<h1>Список бібліотек України</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Adress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Website)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Schedule)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Website)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Schedule)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City.Name)
                    @inject UserManager<ApplicationUser> UserManager
                    @inject SignInManager<ApplicationUser> SignInManager
                    @{
                        if (SignInManager.IsSignedIn(User))
                        {
                            <a asp-controller ="Cities" asp-action="Details" asp-route-id="@item.CityId">Переглянути деталі міста</a>
                        }
                        }
            </td>
            <td>
                    @inject UserManager<ApplicationUser> UserManager
                    @inject SignInManager<ApplicationUser> SignInManager
                    @{
                        if (SignInManager.IsSignedIn(User))
                        {
                            <a asp-action="Details" asp-route-id="@item.Id">Переглянути книги</a> 
                        }
                        }
            </td>
        </tr>
}
    </tbody>
</table>

<div class="container">
    <div id="chart1"></div>
</div>
<div class="container">
    <div id="chart2"></div>
</div>

<div>
    @inject UserManager<ApplicationUser> UserManager
    @inject SignInManager<ApplicationUser> SignInManager
    @{
        var isAdmin = false;
        if (SignInManager.IsSignedIn(User))
        {
            var applicationUser = await UserManager.GetUserAsync(User);
            if (applicationUser is not null)
            {
                isAdmin = await UserManager.IsInRoleAsync(applicationUser, "Admin");
            }
            if (isAdmin)
            {
                <a class="btn btn-primary mb-3" type="submit" asp-area="" asp-controller="Libraries" asp-action="Import">Завантажити дані з файлу</a>
            }
        }
    }

    @{
        if (SignInManager.IsSignedIn(User))
        {
            <a class="btn btn-primary mb-3" type="submit" asp-area="" asp-controller="Libraries" asp-action="Export">Експортувати дані у файл</a>
        }
    }
</div>

@section scripts{
    <script type "text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

            function drawChart() {

                $.get('/api/Chart/JsonData', function(JsonData) {
                    data = google.visualization.arrayToDataTable(JsonData, false);
                    var option = {
                        title: "Співвідношення кількості книжок та бібліотек",
                        width: 900,
                        height: 400
                    };
                    chart = new google.visualization.PieChart(document.getElementById('chart1'));
                    chart.draw(data, option);
                })
            }
    </script>
    <script type "text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart1);

        function drawChart1() {

            $.get('/api/Chart/JsonData1', function (JsonData1) {
                data = google.visualization.arrayToDataTable(JsonData1, false);
                var option = {
                    title: "Співвідношення кількості бібліотек та міст",
                    width: 900,
                    height: 400
                };
                chart = new google.visualization.PieChart(document.getElementById('chart2'));
                chart.draw(data, option);
            })
        }
    </script>
}




