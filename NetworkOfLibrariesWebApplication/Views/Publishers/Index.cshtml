@model IEnumerable<NetworkOfLibrariesWebApplication.Publisher>
@using Microsoft.AspNetCore.Identity;
@using NetworkOfLibrariesWebApplication.Infrastructure.Identity;
@using NetworkOfLibrariesWebApplication.Infrastructure.Identity.Extensions;

@{
    ViewData["Title"] = "Index";
}

<h1>Видавництво</h1>

<p>
    @inject UserManager<ApplicationUser> UserManager
    @inject SignInManager<ApplicationUser> SignInManager
    @{
        var isAdmin = false;
        if (SignInManager.IsSignedIn(User))
        {
            var applicationUser = await UserManager.GetUserAsync(User);
            if (applicationUser is not null)
            {
                isAdmin = await UserManager.IsInRoleAsync(applicationUser, "Admin");
            }
            if (isAdmin)
            {
                <a asp-action="Create">Додати</a>
            }
        }
        }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Owner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Power)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Adress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Power)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City.Name)
            </td>
            <td>
                @inject UserManager<ApplicationUser> UserManager
    @inject SignInManager<ApplicationUser> SignInManager
    @{
        isAdmin = false;
        if (SignInManager.IsSignedIn(User))
        {
            var applicationUser = await UserManager.GetUserAsync(User);
            if (applicationUser is not null)
            {
                isAdmin = await UserManager.IsInRoleAsync(applicationUser, "Admin");
            }
            if (isAdmin)
            {
                <a asp-action="Edit" asp-route-id="@item.Id">Змінити | </a>
                <a asp-action="Delete" asp-route-id="@item.Id">Видалити</a>
            }
        }
        }
            </td>
        </tr>
}
    </tbody>
</table>
